# py3status

general {
	# color_bad = "#dc322f"
	# color_degraded = "#cb4b16"
	# color_good = "#859900"
	# color_separator = "#586e75"
  colors = true
  color_good = "#3abd5b"
  color_degraded = "#F1FA8C"
  color_bad = "#FF5555"

	interval = 3
	markup = "pango"
	output_format = "i3bar"
}

py3status {
  # min_length = 15
}

order += "mpris"
order += "do_not_disturb"
order += "keyboard_locks"

order += "static_string wallpaper_change"

# order += "arch_updates"
# order += "scratchpad"
order += "weather_owm"
# order += "disk /"
# order += "group disks"

# order += "cpu_usage"

# order += "whatismyip"

order += "volume_status speakers"
order += "volume_status mic"
order += "backlight"
# order += "wifi"
order += "time"
order += "battery_level"

static_string wallpaper_change {
    format = "üí´"
    on_click 1 = "exec bash -c 'DISPLAY=:0 python /home/furfa/.scripts/get_bing_wallpaper.py'"
}


scratchpad {
  on_click 1 = 'scratchpad show'
  # format = '[\?not_zero ‚å´ [\?color=scratchpad {scratchpad}]]'
  thresholds = [
   (0, "darkgray"), (1, "violet"), (2, "deepskyblue"), (3, "lime"),
   (4, "yellow"), (5, "orange"), (6, "red"), (7, "tomato"),
  ]
}

volume_status speakers {
	command = "pactl"
	# format = 'ÔÄ® {percentage}%'
	# format_muted = 'ÔÄ¶ {percentage}%'
	button_down = 5
	button_mute = 1
	button_up = 4
	thresholds = [(0, 'bad'), (30, 'degraded'), (50, 'good')]
	max_volume = 200
}

volume_status mic {
  format = 'ÔÑ∞: {percentage}%'
  format_muted = 'ÔÑ±: {percentage}%'
	button_down = 5
	button_mute = 1
	button_up = 4
	is_input = true
	thresholds = [(0, 'bad'), (20, 'degraded'), (30, 'good')]
}

whatismyip {
	# format_offline = "ÔàÑ"
	# format_online = "ÔàÖ"
	mode = 'status'
}

# hide NUM, CAPS, SCR
keyboard_locks {
    format = '\?color=good [\?if=num_lock NUM][\?soft  ]'
    format += '[\?if=caps_lock CAPS][\?soft  ][\?if=scroll_lock SCR]'
}
# disk "/" {
# 	format = "/ %free"
# 	on_click 1 = "exec kitty -e ranger ~"
# }

group disks {
    interval = 4
    # cycle = 30
    format = "{output} {button}"
    # click_mode = "button"
    click_mode = "all"
    format_button_closed = "‚õÅ"
    format_button_open = "‚ù¨"

    disk "/" {
        format = "/%avail"
    }
    disk "/home" {
        format = "~%avail"
    }
}

battery_level {
        cache_timeout = 5
        battery_id = all
        blocks = "ÔâÑÔâÉÔâÇÔâÅÔâÄ"
        charging_character = "‚ö°"
        measurement_mode='acpi'
        format = "{icon} {percent}%"
        threshold_full = 99
        # format_notify_charging = "Charging ({percent}%), finishing in: {time_remaining}"
        # format_notify_discharging = "Time remaining: {time_remaining}"
        # notification = true
        # notify_low_level = true
}


mpris {
    # format = "[{title} - {artist}]  {previous} {toggle} {next}"
    format = "{previous} [{artist:^8.8}] {next}"
    # format = "{previous} {play} {next} {player}: {state} [[{artist} - {title}]|[{title}]]"
    icon_pause = "||"
    format_none = ""
    # player_priority = "[spotify, *]"
}

time {
    format = "%d.%m %H:%M:%S"
    on_click 3 = "reload"
    on_click 2 = "restart"
    on_click 1 = "exec pkill gnome-calendar || GTK_THEME=Adwaita:light gnome-calendar"
}

weather_owm {
    api_key = f238267d3696e5425767f07bb27a518b
    lang='ru'
    unit_temperature='c'
    city = 'Novosibirsk'
    format_temperature='[\?color=all {current:.0f}¬∞{unit}]'
    format='{icon}: {temperature}'
    on_click 1 = "exec ~/.scripts/weather_window.sh"
}

do_not_disturb {
    
    thresholds = [(0, 'good'), (1, 'bad')]
    format = '[\?color=state  [\?if=state üó©|üó©]]'
}

